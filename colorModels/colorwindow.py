# Form implementation generated from reading ui file 'ColorWindow.ui'
#
# Created by: PyQt6 UI code generator 6.4.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.
import io

from PIL import Image, ImageQt
from PyQt6 import QtCore, QtGui, QtWidgets
from PyQt6.QtGui import QPixmap, QCursor, QColor, QImage
from PyQt6.QtWidgets import QFileDialog, QApplication, QLabel
from colorModels.colorFunctions import *
from PyQt6.QtCore import Qt, pyqtSignal, QPoint, QBuffer, QByteArray


class ClickableLabel(QLabel):
    clicked = pyqtSignal(QPoint)

    def mousePressEvent(self, event):
        self.clicked.emit(event.pos())

class Ui_ColorWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(851, 600)
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(parent=self.centralwidget)
        self.label.setGeometry(QtCore.QRect(20, 90, 191, 31))
        font = QtGui.QFont()
        font.setPointSize(20)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.operate_image_button = QtWidgets.QPushButton(parent=self.centralwidget)
        self.operate_image_button.setGeometry(QtCore.QRect(160, 280, 111, 51))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.operate_image_button.setFont(font)
        self.operate_image_button.setObjectName("operate_image_button")
        self.widget = QtWidgets.QWidget(parent=self.centralwidget)
        self.widget.setGeometry(QtCore.QRect(430, 70, 411, 371))
        self.widget.setObjectName("widget")
        # self.image = QtWidgets.QLabel(parent=self.widget)
        # self.image.setGeometry(QtCore.QRect(8, 5, 401, 361))
        self.image = ClickableLabel(parent=self.widget)
        self.image.setGeometry(QtCore.QRect(8, 5, 401, 361))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.image.sizePolicy().hasHeightForWidth())
        self.image.setSizePolicy(sizePolicy)
        self.image.setText("")
        self.image.setScaledContents(False)
        self.image.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.image.setObjectName("image")
        self.clear_button = QtWidgets.QPushButton(parent=self.centralwidget)
        self.clear_button.setGeometry(QtCore.QRect(580, 460, 111, 51))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.clear_button.setFont(font)
        self.clear_button.setObjectName("clear_button")
        self.gridLayoutWidget = QtWidgets.QWidget(parent=self.centralwidget)
        self.gridLayoutWidget.setGeometry(QtCore.QRect(20, 130, 391, 141))
        self.gridLayoutWidget.setObjectName("gridLayoutWidget")
        self.gridLayout = QtWidgets.QGridLayout(self.gridLayoutWidget)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setObjectName("gridLayout")
        self.yellowSaturation = QtWidgets.QSpinBox(parent=self.gridLayoutWidget)
        self.yellowSaturation.setMaximum(100)
        self.yellowSaturation.setObjectName("yellowSaturation")
        self.gridLayout.addWidget(self.yellowSaturation, 1, 1, 1, 1)
        self.label_3 = QtWidgets.QLabel(parent=self.gridLayoutWidget)
        self.label_3.setObjectName("label_3")
        self.gridLayout.addWidget(self.label_3, 1, 0, 1, 1)
        self.path_line = QtWidgets.QLineEdit(parent=self.gridLayoutWidget)
        self.path_line.setObjectName("path_line")
        self.gridLayout.addWidget(self.path_line, 0, 1, 1, 1)
        self.browseButton = QtWidgets.QPushButton(parent=self.gridLayoutWidget)
        self.browseButton.setObjectName("browseButton")
        self.gridLayout.addWidget(self.browseButton, 0, 2, 1, 1)
        self.label_2 = QtWidgets.QLabel(parent=self.gridLayoutWidget)
        self.label_2.setObjectName("label_2")
        self.gridLayout.addWidget(self.label_2, 0, 0, 1, 1)
        self.label_4 = QtWidgets.QLabel(parent=self.gridLayoutWidget)
        self.label_4.setObjectName("label_4")
        self.gridLayout.addWidget(self.label_4, 2, 0, 1, 1)
        self.yellowSaturation_2 = QtWidgets.QSpinBox(parent=self.gridLayoutWidget)
        self.yellowSaturation_2.setMaximum(100)
        self.yellowSaturation_2.setObjectName("yellowSaturation_2")
        self.gridLayout.addWidget(self.yellowSaturation_2, 2, 1, 1, 1)
        self.horizontalLayoutWidget = QtWidgets.QWidget(parent=self.centralwidget)
        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(0, 0, 851, 41))
        self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout.addItem(spacerItem)
        self.mainPage = ClickableLabel(parent=self.horizontalLayoutWidget)
        font = QtGui.QFont()
        font.setBold(False)
        self.mainPage.setFont(font)
        self.mainPage.setObjectName("mainPage")
        self.horizontalLayout.addWidget(self.mainPage)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout.addItem(spacerItem1)
        self.lab1 = ClickableLabel(parent=self.horizontalLayoutWidget)
        font = QtGui.QFont()
        font.setBold(False)
        self.lab1.setFont(font)
        self.lab1.setObjectName("lab1")
        self.horizontalLayout.addWidget(self.lab1)
        spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout.addItem(spacerItem2)
        self.lab2 = ClickableLabel(parent=self.horizontalLayoutWidget)
        font = QtGui.QFont()
        font.setBold(True)
        self.lab2.setFont(font)
        self.lab2.setObjectName("lab2")
        self.horizontalLayout.addWidget(self.lab2)
        spacerItem3 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout.addItem(spacerItem3)
        self.lab3 = ClickableLabel(parent=self.horizontalLayoutWidget)
        font = QtGui.QFont()
        font.setBold(False)
        self.lab3.setFont(font)
        self.lab3.setObjectName("lab3")
        self.horizontalLayout.addWidget(self.lab3)
        spacerItem4 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout.addItem(spacerItem4)
        self.lectures = ClickableLabel(parent=self.horizontalLayoutWidget)
        font = QtGui.QFont()
        font.setBold(False)
        self.lectures.setFont(font)
        self.lectures.setObjectName("lectures")
        self.horizontalLayout.addWidget(self.lectures)
        spacerItem5 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout.addItem(spacerItem5)
        self.about = ClickableLabel(parent=self.horizontalLayoutWidget)
        font = QtGui.QFont()
        font.setBold(False)
        self.about.setFont(font)
        self.about.setObjectName("about")
        self.horizontalLayout.addWidget(self.about)
        spacerItem6 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout.addItem(spacerItem6)
        self.label_5 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(20, 360, 171, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_5.setFont(font)
        self.label_5.setObjectName("label_5")
        self.label_6 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_6.setGeometry(QtCore.QRect(16, 400, 20, 21))
        self.label_6.setObjectName("label_6")
        self.label_7 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_7.setGeometry(QtCore.QRect(100, 400, 31, 21))
        self.label_7.setObjectName("label_7")
        self.label_8 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_8.setGeometry(QtCore.QRect(190, 400, 16, 21))
        self.label_8.setObjectName("label_8")
        self.label_9 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_9.setGeometry(QtCore.QRect(280, 400, 21, 21))
        self.label_9.setObjectName("label_9")
        self.C = QtWidgets.QDoubleSpinBox(parent=self.centralwidget)
        self.C.setGeometry(QtCore.QRect(30, 400, 62, 22))
        self.C.setMaximum(1.0)
        self.C.setSingleStep(0.1)
        self.C.setObjectName("C")
        self.M = QtWidgets.QDoubleSpinBox(parent=self.centralwidget)
        self.M.setGeometry(QtCore.QRect(120, 400, 62, 22))
        self.M.setMaximum(1.0)
        self.M.setSingleStep(0.1)
        self.M.setObjectName("M")
        self.Y = QtWidgets.QDoubleSpinBox(parent=self.centralwidget)
        self.Y.setGeometry(QtCore.QRect(210, 400, 62, 22))
        self.Y.setMaximum(1.0)
        self.Y.setSingleStep(0.1)
        self.Y.setObjectName("Y")
        self.K = QtWidgets.QDoubleSpinBox(parent=self.centralwidget)
        self.K.setGeometry(QtCore.QRect(300, 400, 62, 22))
        self.K.setDecimals(2)
        self.K.setMaximum(1.0)
        self.K.setSingleStep(0.1)
        self.K.setObjectName("K")
        self.label_10 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_10.setGeometry(QtCore.QRect(100, 440, 31, 21))
        self.label_10.setObjectName("label_10")
        self.H = QtWidgets.QDoubleSpinBox(parent=self.centralwidget)
        self.H.setGeometry(QtCore.QRect(30, 440, 62, 22))
        self.H.setMaximum(360.0)
        self.H.setSingleStep(0.1)
        self.H.setObjectName("H")
        self.S = QtWidgets.QDoubleSpinBox(parent=self.centralwidget)
        self.S.setGeometry(QtCore.QRect(120, 440, 62, 22))
        self.S.setMaximum(1.0)
        self.S.setSingleStep(0.1)
        self.S.setObjectName("S")
        self.label_11 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_11.setGeometry(QtCore.QRect(16, 440, 20, 21))
        self.label_11.setObjectName("label_11")
        self.label_12 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_12.setGeometry(QtCore.QRect(190, 440, 16, 21))
        self.label_12.setObjectName("label_12")
        self.L = QtWidgets.QDoubleSpinBox(parent=self.centralwidget)
        self.L.setGeometry(QtCore.QRect(210, 440, 62, 22))
        self.L.setMaximum(100.0)
        self.L.setSingleStep(0.1)
        self.L.setObjectName("L")
        self.processPixel = QtWidgets.QPushButton(parent=self.centralwidget)
        self.processPixel.setGeometry(QtCore.QRect(120, 480, 81, 31))
        self.processPixel.setObjectName("processPixel")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(parent=MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 851, 22))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(parent=MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        # Own code here
        self.add_functions()

        self.image.setPixmap(QPixmap())
        self.image.setPixmap(QPixmap("gray_placeholder.png"))

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "FractalWindow"))
        self.label.setText(_translate("MainWindow", "Fill in the forms"))
        self.operate_image_button.setText(_translate("MainWindow", "Submit"))
        self.clear_button.setText(_translate("MainWindow", "Clear"))
        self.label_3.setText(_translate("MainWindow", "Yellow Saturation:"))
        self.browseButton.setText(_translate("MainWindow", "Browse"))
        self.label_2.setText(_translate("MainWindow", "Select image file"))
        self.label_4.setText(_translate("MainWindow", "Cyan Saturation:"))
        self.mainPage.setText(_translate("MainWindow", "Main page"))
        self.lab1.setText(_translate("MainWindow", "Lab 1"))
        self.lab2.setText(_translate("MainWindow", "Lab 2"))
        self.lab3.setText(_translate("MainWindow", "Lab 3"))
        self.lectures.setText(_translate("MainWindow", "Lectures"))
        self.about.setText(_translate("MainWindow", "About"))
        self.label_5.setText(_translate("MainWindow", "To select pixel click on image"))
        self.label_6.setText(_translate("MainWindow", "C"))
        self.label_7.setText(_translate("MainWindow", "M"))
        self.label_8.setText(_translate("MainWindow", "Y"))
        self.label_9.setText(_translate("MainWindow", "K"))
        self.label_10.setText(_translate("MainWindow", "S"))
        self.label_11.setText(_translate("MainWindow", "H"))
        self.label_12.setText(_translate("MainWindow", "L"))
        self.processPixel.setText(_translate("MainWindow", "Process"))

    def add_functions(self):
        self.operate_image_button.clicked.connect(lambda: self.operate_image())
        self.browseButton.clicked.connect(lambda: self.find_image())
        self.clear_button.clicked.connect(lambda: self.clear_image())
        self.image.clicked.connect(self.select_pixel_to_change)

        self.C.valueChanged.connect(lambda: self.changeWorkingModel("CMYK"))
        self.M.valueChanged.connect(lambda: self.changeWorkingModel("CMYK"))
        self.Y.valueChanged.connect(lambda: self.changeWorkingModel("CMYK"))
        self.K.valueChanged.connect(lambda: self.changeWorkingModel("CMYK"))

        self.H.valueChanged.connect(lambda: self.changeWorkingModel("HSL"))
        self.S.valueChanged.connect(lambda: self.changeWorkingModel("HSL"))
        self.L.valueChanged.connect(lambda: self.changeWorkingModel("HSL"))

        self.processPixel.clicked.connect(lambda: self.processFragmentPixel())

    current_pixel_x = None
    current_pixel_y = None
    current_pixel_RGB = None
    workingModel = None

    width = None
    height = None

    def changeWorkingModel(self, value):
        self.workingModel = value

    def processFragmentPixel(self):
        img = self.image.pixmap().toImage()
        pixel = img.pixel(self.current_pixel_x, self.current_pixel_y)

        updated_rgb = None

        if self.workingModel == "CMYK":
            print("CMYK")
            cmyk = list(rgb_to_cmyk(self.current_pixel_RGB))

            print(cmyk)

            cmyk[0] = self.C.value()
            cmyk[1] = self.M.value()
            cmyk[2] = self.Y.value()
            cmyk[3] = self.K.value()

            print(cmyk)

            updated_rgb = cmyk_to_rgb(cmyk)
            updated_rgb = tuple(int(value) for value in updated_rgb)

            updated_hsl = rgb_to_hsl(updated_rgb)

            self.H.setValue(updated_hsl[0])
            self.S.setValue(updated_hsl[1])
            self.L.setValue(updated_hsl[2])

        elif self.workingModel == "HSL":
            print("HSL")
            hsl = list(rgb_to_hsl(self.current_pixel_RGB))

            print(hsl)

            hsl[0] = self.H.value()
            hsl[1] = self.S.value()
            hsl[2] = self.L.value()

            print(hsl)

            updated_rgb = hsl_to_rgb(hsl)
            updated_rgb = tuple(int(value) for value in updated_rgb)

            updated_cmyk = rgb_to_cmyk(updated_rgb)

            self.C.setValue(updated_cmyk[0])
            self.M.setValue(updated_cmyk[1])
            self.Y.setValue(updated_cmyk[2])
            self.K.setValue(updated_cmyk[3])

        img.setPixel(self.current_pixel_x, self.current_pixel_y, QColor(*updated_rgb).rgb())

        # Update the QLabel with the modified image
        self.image.setPixmap(QPixmap.fromImage(img).scaled(self.image.size(),
                                                           aspectRatioMode=QtCore.Qt.AspectRatioMode.KeepAspectRatio))
        img.save("result.jpeg")

    def select_pixel_to_change(self, pos):
        self.current_pixel_x = pos.x()
        self.current_pixel_y = pos.y()
        color = QColor(self.image.pixmap().toImage().pixel(pos))
        self.current_pixel_RGB = [color.red(), color.green(), color.blue()]
        print(
            f"Selected Pixel: x={self.current_pixel_x}, y={self.current_pixel_y}, RGB={color.red()}, {color.green()}, {color.blue()}")
        cmyk = rgb_to_cmyk(self.current_pixel_RGB)
        hsl = rgb_to_hsl(self.current_pixel_RGB)

        print(cmyk)
        print(hsl)

        self.C.setValue(cmyk[0])
        self.M.setValue(cmyk[1])
        self.Y.setValue(cmyk[2])
        self.K.setValue(cmyk[3])

        self.H.setValue(hsl[0])
        self.S.setValue(hsl[1])
        self.L.setValue(hsl[2])

    def operate_image(self):
        pixmap = self.image.pixmap()
        buffer = QBuffer()
        buffer.open(QBuffer.OpenModeFlag.WriteOnly)
        pixmap.save(buffer, "PNG")
        img_data = buffer.data()
        img = Image.open(io.BytesIO(img_data))

        img_rgb = img.convert("RGB")
        pixels_rgb = list(img_rgb.getdata())

        pixels_hsl = [rgb_to_hsl(rgb) for rgb in pixels_rgb]

        modified_pixels_hsl = modify_saturation_hsl(pixels_hsl, self.yellowSaturation.value() / 100,"Yellow")
        modified_pixels_hsl = modify_saturation_hsl(modified_pixels_hsl, self.yellowSaturation_2.value() / 100, "Cyan")

        image_result = Image.new("RGB", (self.width, self.height))
        image_result.putdata(convert_hsl_to_rgb(modified_pixels_hsl))
        image_result.save("result.jpeg")

        self.image.setPixmap(QPixmap())
        self.image.setPixmap(
            QPixmap("result.jpeg").scaled(self.image.size(), aspectRatioMode=QtCore.Qt.AspectRatioMode.KeepAspectRatio))

    def find_image(self):
        file_dialog = QFileDialog.getOpenFileName(None, "Open file", "", "Images (*.jpg *.png *.jpeg)")
        self.path_line.setText(file_dialog[0])
        image_path = file_dialog[0]
        img = Image.open(image_path)

        img_qt = ImageQt.ImageQt(img)
        q_img = QImage(img_qt)

        pixmap = QPixmap.fromImage(q_img).scaled(self.image.size(),
                                                 aspectRatioMode=QtCore.Qt.AspectRatioMode.KeepAspectRatio)
        self.image.resize(pixmap.width(), pixmap.height())
        self.image.setPixmap(pixmap)

        self.width = self.image.width()
        self.height = self.image.height()

        print(pixmap.size())
        print(self.image.size())
        print(q_img.size())
        print(self.width)
        print(self.height)

    def clear_image(self):
        self.image.setPixmap(QPixmap())
        self.image.setPixmap(QPixmap("gray_placeholder.png"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_ColorWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec())
